library(tidyverse)
library(ggrepel)

rm(list=ls())


aln.stat <- read.table("./HMM/HMM_final/bhmw.aln.hmm.islands.stats.txt",header=T)
wl <- read.table("./HMM/HMM_final/bhmw.aln.hmm.island.loci.stats.list",header=T)
gFst=0.0382 #global Fst


###################
##filter islands###
###################
#Remove islands if it is a single-SNP island and it is the only island on that chromosomes.
chr.target <- wl %>% 
  group_by(chr) %>% 
  mutate(n.win.chr=n()) %>% 
  filter(n.win.chr>1 & chr!="Unplaced") %>% 
  pull(chr)
chr.target <- unique(chr.target)
chr.target #only label islands and island outliers if they are on the chr.target. 


win.target <- wl %>% 
  group_by(chr) %>% 
  mutate(n.win.chr=n()) %>% 
  filter(n.win.chr>1 & chr!="Unplaced") %>% 
  pull(win)
win.target <- unique(win.target)
win.target


#######################
##labeling parameters##
#######################
#calculate the difference between the maximum and minimum cumulative base pair 
#position for each chromosome and divide it by two to get the middle of each chromosome.

axis.set <- aln.stat %>% 
  group_by(chr) %>% 
  summarize(center = (max(chr.mbp) + min(chr.mbp)) / 2)

ylim=max(aln.stat$Fstp)+0.1 # have some space on the y axis
##replace nagative Fst value to a very small value close to 0 for plotting reasons
aln.stat <- aln.stat %>% 
  mutate(Fst_plot=if_else(Fstp<0, 0.001, Fstp))
range(aln.stat$Fst_plot)


###Order chromosomes###
aln.stat$chr <- as.factor(aln.stat$chr)
nCHR=length(levels(aln.stat$chr))
aln.stat$chr <- factor(aln.stat$chr, levels=c(seq(1,nCHR-1,1),"Unplaced"))
levels(aln.stat$chr)

###plot it

p <- ggplot(aln.stat, aes(x = chr.mbp, y = Fst_plot, 
                          color = chr)) +
  geom_point(size=2) +
  #add reference line for global Fst
  geom_hline(yintercept = gFst, color = "red", linetype = "dashed") + 
  scale_x_continuous(label = axis.set$chr, breaks = axis.set$center) +
  scale_y_continuous(expand = c(0,0), limits=c(0, ylim)) +
  scale_color_manual(values = rep(c("dimgray","darkgrey"), nCHR)) +
  scale_size_continuous(range = c(1,4)) +
  labs(x = NULL, 
       y = "Fst") + 
  theme_minimal(base_size = 15) +
  theme( 
    legend.position = "none",
    panel.border = element_rect(colour="black",fill=NA, size=1),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.text.x = element_text(angle = 90, size = 12, vjust = 0.5)
  )+
  
  #add points for genomic islands of high differentiation
  geom_point(data=subset(aln.stat, sig.state=="high" & chr%in%chr.target), aes(x=(win.start+win.end)/2, y=ylim-0.01, size=win.end - win.start), col="navyblue", alpha=0.5)+
  
  # Add highlighted points for significant island outlier SNPs
  geom_point(data=subset(aln.stat, sig.state=="high" & chr%in%chr.target), color="tomato", alpha=0.8, size=3.5)+
  
  # Add highlighted points for adaptive loci on the islands
  geom_point(data=subset(aln.stat, env=="TRUE" & win%in%win.target), color="darkred", alpha=0.8, size=3.5)+
  # Add label using ggrepel to avoid overlapping for adaptive loci on the islands
  geom_label_repel( data=subset(aln.stat, env =="TRUE" & win %in% win.target), aes(label=id), color="darkred",size=3)+

  # Add highlighted points for adaptive loci NOT on the islands
  geom_point(data=subset(aln.stat, env=="TRUE" & !win%in%win.target), color="orange", alpha=0.8, size=3.5)+
  # Add label using ggrepel to avoid overlapping for adaptive loci on the islands
  geom_label_repel( data=subset(aln.stat, env =="TRUE" & !win %in% win.target), aes(label=id), color="orange",size=3)


pdf("./HMM/HMM_final/bhmw.aln.env.hmm.islands..4pops.filtered.pdf", width = 12, height=8)
p
dev.off()

