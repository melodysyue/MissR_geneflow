library(tidyverse)

###Prepare input for HMM to identify island of genomic differentiation
###Input format: a sequence of Fst values ordered by chromosome positions, concatenated across chromosomes, with header X.



###Order aligned SNPs based on cumulative positions along genomes###
rm(list=ls())
aln <- read.table("./alignment/bhmw.bwa.danRer11.uni.mapq20.aln.txt",header=T)
table(aln$chr)
nCHR <- length(unique(aln$chr))
nCHR

aln$chr=as.factor(aln$chr)
levels(aln$chr)

aln$chr <- factor(aln$chr, levels=c(seq(1,nCHR-1,1),"unplaced"))
levels(aln$chr)=c(seq(1,nCHR-1,1),"Unplaced")
levels(aln$chr)
table(aln$chr)

aln$BPcum <- NA #cumulative position
s <- 0
nbp <- c()

for (i in levels(unique(aln$chr))){
  nbp[i] <- max(aln[aln$chr == i,]$pos)
  aln[aln$chr == i,"BPcum"] <- aln[aln$chr == i,"pos"] + s
  s <- s + nbp[i]
}

summary(aln)

###Add global Fst values ###
stat <- read.csv("./outliers_summary/bhmw.loc.outlier.summary.csv",header=T)
head(stat)

aln.stat <- left_join(aln,stat, by=c("snp"="chrom")) %>% 
  dplyr::select(locus, tag=snp, tag.pos=pos.y, chr, chr.pos=pos.x, chr.cumpos=BPcum,everything()) %>% 
  arrange(chr.cumpos)

input <- aln.stat %>% 
  pull(Fstp)

write.table(aln.stat, "./alignment/bhmw.bwa.danRer11.aln.stat.txt",quote=F, row.names = F)
write.table(input,"./HMM/bhmw.bwa.danRer11.aln.Fstp.txt",quote=F, row.names=F)

