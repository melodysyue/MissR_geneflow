library(tidyverse)

rm(list=ls())
good.ind.pop <- read.table("./good.ind.50K_PopOnly.txt", header=T)

geno <- read.table("./polyGenResults_singleSNP_letter_good.txt", check.names = F, header=T)
geno[1:5,1:5]

#remove , from the genotype
geno <- geno %>% 
  mutate_all(funs(str_replace_all(., ",","")))
geno[1:5,1:5]

#transpose
geno <- t(geno)
geno[1:5,1:5]

#filter pop-only samples
geno.pop <- geno %>% 
  as.data.frame() %>% 
  rownames_to_column("sample") %>% 
  filter(sample %in% good.ind.pop$x) %>% 
  column_to_rownames("sample")
dim(geno.pop)
geno.pop[1:5,1:5]


###Make Polygene input
##Polygene input format:
#(tab-delimited)
#ID Pop Ploidy Loc1 Loc2
#Ind1  pop1  4  2,3,4  1,2,4
#Ind2  pop1  4  4      2,3,4
#Ind3  pop2  4  1,4    1,2,3,4

#convert ACGT to 1234
#A > 1
#C > 2
#G > 3
#T > 4
#0000 > blank

geno.pop.num <- geno.pop %>% 
  mutate_all(funs(str_replace_all(., "A", "1,"))) %>% 
  mutate_all(funs(str_replace_all(., "C", "2,"))) %>% 
  mutate_all(funs(str_replace_all(., "G", "3,"))) %>% 
  mutate_all(funs(str_replace_all(., "T", "4,"))) %>% 
  mutate_all(funs(str_replace_all(., ",$", ""))) %>% #remove tailing comma; 
  mutate_all(funs(str_replace_all(., "0000", ""))) # replace missing data 0000 with blank

geno.pop.num[1:5,1:5]

geno.pop.num <- geno.pop.num %>% 
  rownames_to_column("ID") %>% 
  mutate(Ploidy=4)
geno.pop.num[1:5,1:5]


#add popmap
popmap <- read.csv("./popmap/stg_popmap_PopOnly.csv", header=T)
popmap$Sample <- str_replace_all(popmap$Sample, "_", "-")

popmap <- popmap %>% 
  filter(Sample %in% good.ind.pop$x)


geno.pop.num <- left_join(geno.pop.num, popmap, by=c("ID"="Sample")) %>% 
  select(-Population) %>% 
  select(ID, Pop=Lake, Ploidy, everything())

dim(geno.pop.num)
geno.pop.num[1:5,1:5]


write.table(geno.pop.num, "polygene_geno_pop_input.txt", quote=F, row.names = F, sep="\t")
